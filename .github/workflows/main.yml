name: RetailPulse Backend CI Pipeline

env:
  JAVA_VERSION: '23'          # Centralized JDK version
  DISTRIBUTION: 'temurin'     # Centralized distribution
  MAVEN_CACHE: 'maven'        # Centralized cache type

on:
  push:
    branches:
      - "main" # Trigger on pushes to the "main" branch
  pull_request:
    branches:
      - "main" # Trigger on pull requests targeting the "main" branch
    types:
      - opened
      - synchronize
      - reopened

jobs:
  backend-unit-test:
    name: Backend Unit Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: ${{ env.DISTRIBUTION }}
        cache: ${{ env.MAVEN_CACHE }}

    - name: Clean Backend
      run: mvn clean --file pom.xml

    - name: Build Backend
      run: mvn --batch-mode -DskipTests package --file pom.xml

    - name: Test Backend
      run: mvn --batch-mode test --file pom.xml
  
  backend-sonarqube-scan:
    name: Build and analyze
    needs: backend-unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: ${{ env.MAVEN_CACHE }}
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2      
      - name: Build, Test, and Generate Code Coverage Report
        run: mvn -B clean verify jacoco:report  
      - name: Upload Code Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco/
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 

  backend-snyk-scan:
    name: Backend Snyk Scan
    needs: backend-unit-test  # Or `backend-sonarqube-scan` if you prefer waiting for that
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.DISTRIBUTION }}
          cache: ${{ env.MAVEN_CACHE }}

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Run Snyk to check for vulnerabilities (non-blocking)
        run: snyk test --all-projects --severity-threshold=low || true
      
      - name: Monitor project in Snyk dashboard
        run: snyk monitor --all-projects
      
      
      